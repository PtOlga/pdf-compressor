#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Mega –Ω–∞ GitHub Actions
"""

import os
import sys
import time
import json

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ path
sys.path.insert(0, 'src')

print("=" * 70)
print("üß™ –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Mega –Ω–∞ GitHub Actions")
print("=" * 70)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
mega_email = os.getenv('MEGA_EMAIL')
mega_password = os.getenv('MEGA_PASSWORD')

print(f"   MEGA_EMAIL: {'‚úÖ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞' if mega_email else '‚ùå –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}")
print(f"   MEGA_PASSWORD: {'‚úÖ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞' if mega_password else '‚ùå –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}")

if not mega_email or not mega_password:
    print("\n‚ùå –û—à–∏–±–∫–∞: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è MEGA_EMAIL –∏ MEGA_PASSWORD")
    sys.exit(1)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
print("\nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Mega API:")
try:
    import requests
    response = requests.get('https://g.api.mega.co.nz/cs', timeout=10)
    print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
    print(f"   –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: {len(response.text)} –±–∞–π—Ç")
    if response.text:
        print(f"   –û—Ç–≤–µ—Ç: {response.text[:100]}")
    else:
        print("   ‚ö†Ô∏è –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç API!")
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

# –ü–∞—Ç—á –¥–ª—è mega.py - –¥–æ–±–∞–≤–ª—è–µ–º User-Agent
print("\nüîß –ü—Ä–∏–º–µ–Ω—è—é –ø–∞—Ç—á –¥–ª—è mega.py...")
try:
    import requests
    original_post = requests.post

    def patched_post(*args, **kwargs):
        """–ü–∞—Ç—á –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è User-Agent –∫ –∑–∞–ø—Ä–æ—Å–∞–º"""
        if 'headers' not in kwargs:
            kwargs['headers'] = {}
        if 'User-Agent' not in kwargs['headers']:
            kwargs['headers']['User-Agent'] = 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36'
        return original_post(*args, **kwargs)

    requests.post = patched_post
    print("   ‚úÖ –ü–∞—Ç—á –ø—Ä–∏–º–µ–Ω–µ–Ω")
except Exception as e:
    print(f"   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å –ø–∞—Ç—á: {e}")

# –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Mega
print("\nüîê –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Mega:")
try:
    from mega import Mega
    
    print("   ‚úÖ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ mega.py –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞")
    
    mega = Mega()
    print("   ‚úÖ –û–±—ä–µ–∫—Ç Mega —Å–æ–∑–¥–∞–Ω")
    
    print(f"   ‚è≥ –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ —Å email: {mega_email}")
    
    # –ü—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏ —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
    for attempt in range(3):
        try:
            print(f"      –ü–æ–ø—ã—Ç–∫–∞ {attempt + 1}/3...")
            m = mega.login(mega_email, mega_password)
            print("      ‚úÖ –£—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ Mega!")
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–≤–æ—Ç–µ
            print("\nüíæ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–≤–æ—Ç–µ:")
            try:
                quota = m.get_quota()
                print(f"   ‚úÖ –ö–≤–æ—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞: {json.dumps(quota, indent=2)}")
            except Exception as e:
                print(f"   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–≤–æ—Ç—É: {e}")
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
            print("\nüìÇ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤:")
            try:
                files = m.get_files()
                print(f"   ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(files)} –æ–±—ä–µ–∫—Ç–æ–≤")
            except Exception as e:
                print(f"   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤: {e}")
            
            break
            
        except Exception as e:
            print(f"      ‚ùå –û—à–∏–±–∫–∞: {type(e).__name__}: {e}")
            if attempt < 2:
                wait_time = 5 * (attempt + 1)
                print(f"      ‚è≥ –ñ–¥—É {wait_time} —Å–µ–∫ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π...")
                time.sleep(wait_time)
            else:
                raise
    
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
    sys.exit(1)

print("\n" + "=" * 70)
print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
print("=" * 70)

