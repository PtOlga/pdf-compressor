name: Diagnostic - Check Shared Folders

on:
  workflow_dispatch:

env:
  MEGA_EMAIL: ${{ secrets.MEGA_EMAIL }}
  MEGA_PASSWORD: ${{ secrets.MEGA_PASSWORD }}

jobs:
  diagnose-shared-folders:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Install rclone
      run: |
        echo "Installing rclone..."
        curl https://rclone.org/install.sh | sudo bash
        rclone version
        
    - name: Configure rclone environment
      run: |
        echo "Setting up rclone environment variables..."
        export RCLONE_CONFIG_MEGA_TYPE=mega
        export RCLONE_CONFIG_MEGA_USER="${MEGA_EMAIL}"
        export RCLONE_CONFIG_MEGA_PASS="${MEGA_PASSWORD}"
        
    - name: "Step 1: List root folders"
      run: |
        echo "=================================================="
        echo "STEP 1: Checking root folders in Mega"
        echo "=================================================="
        
        export RCLONE_CONFIG_MEGA_TYPE=mega
        export RCLONE_CONFIG_MEGA_USER="${MEGA_EMAIL}"
        export RCLONE_CONFIG_MEGA_PASS="${MEGA_PASSWORD}"
        
        rclone lsd mega:/ || echo "Failed to list root"
        
    - name: "Step 2: Check for Incoming shares folder"
      run: |
        echo ""
        echo "=================================================="
        echo "STEP 2: Checking 'Incoming shares' folder"
        echo "=================================================="
        
        export RCLONE_CONFIG_MEGA_TYPE=mega
        export RCLONE_CONFIG_MEGA_USER="${MEGA_EMAIL}"
        export RCLONE_CONFIG_MEGA_PASS="${MEGA_PASSWORD}"
        
        rclone lsd "mega:/Incoming shares" || echo "Failed to list Incoming shares"
        
    - name: "Step 3: Check WI folder structure"
      run: |
        echo ""
        echo "=================================================="
        echo "STEP 3: Checking WI folder structure"
        echo "=================================================="
        
        export RCLONE_CONFIG_MEGA_TYPE=mega
        export RCLONE_CONFIG_MEGA_USER="${MEGA_EMAIL}"
        export RCLONE_CONFIG_MEGA_PASS="${MEGA_PASSWORD}"
        
        echo "Listing WI folder (depth 1):"
        rclone lsd "mega:/Incoming shares/WI" --max-depth 1 || echo "Failed to list WI"
        
        echo ""
        echo "Listing WI folder (depth 2):"
        rclone lsd "mega:/Incoming shares/WI" --max-depth 2 || echo "Failed to list WI with depth 2"
        
    - name: "Step 4: Search for PDF/pdf folders"
      run: |
        echo ""
        echo "=================================================="
        echo "STEP 4: Searching for PDF folders in WI"
        echo "=================================================="
        
        export RCLONE_CONFIG_MEGA_TYPE=mega
        export RCLONE_CONFIG_MEGA_USER="${MEGA_EMAIL}"
        export RCLONE_CONFIG_MEGA_PASS="${MEGA_PASSWORD}"
        
        echo "Trying: mega:/Incoming shares/WI/PDF"
        rclone lsd "mega:/Incoming shares/WI/PDF" 2>&1 || echo "Not found: PDF"
        
        echo ""
        echo "Trying: mega:/Incoming shares/WI/pdf"
        rclone lsd "mega:/Incoming shares/WI/pdf" 2>&1 || echo "Not found: pdf"
        
        echo ""
        echo "Trying: mega:/Incoming shares/WI/Pdf"
        rclone lsd "mega:/Incoming shares/WI/Pdf" 2>&1 || echo "Not found: Pdf"
        
    - name: "Step 5: Get full JSON structure"
      run: |
        echo ""
        echo "=================================================="
        echo "STEP 5: Getting JSON structure of WI folder"
        echo "=================================================="
        
        export RCLONE_CONFIG_MEGA_TYPE=mega
        export RCLONE_CONFIG_MEGA_USER="${MEGA_EMAIL}"
        export RCLONE_CONFIG_MEGA_PASS="${MEGA_PASSWORD}"
        
        echo "Getting JSON list of WI contents:"
        rclone lsjson "mega:/Incoming shares/WI" --max-depth 1 | python3 -m json.tool || echo "Failed to get JSON"
        
    - name: "Step 6: Search for Input folders"
      run: |
        echo ""
        echo "=================================================="
        echo "STEP 6: Searching for Input folders"
        echo "=================================================="
        
        export RCLONE_CONFIG_MEGA_TYPE=mega
        export RCLONE_CONFIG_MEGA_USER="${MEGA_EMAIL}"
        export RCLONE_CONFIG_MEGA_PASS="${MEGA_PASSWORD}"
        
        echo "Trying various case combinations:"
        
        for pdf_case in PDF pdf Pdf; do
          for input_case in Input input INPUT; do
            path="mega:/Incoming shares/WI/${pdf_case}/${input_case}"
            echo ""
            echo "Trying: $path"
            if rclone lsd "$path" 2>&1 | grep -q "directory not found"; then
              echo "  ‚ùå Not found"
            else
              echo "  ‚úÖ EXISTS!"
              rclone lsd "$path"
            fi
          done
        done
        
    - name: "Step 7: Tree-like view of WI"
      run: |
        echo ""
        echo "=================================================="
        echo "STEP 7: Tree-like view of WI structure"
        echo "=================================================="
        
        export RCLONE_CONFIG_MEGA_TYPE=mega
        export RCLONE_CONFIG_MEGA_USER="${MEGA_EMAIL}"
        export RCLONE_CONFIG_MEGA_PASS="${MEGA_PASSWORD}"
        
        echo "Creating tree view..."
        rclone tree "mega:/Incoming shares/WI" --max-depth 3 || rclone lsd "mega:/Incoming shares/WI" --max-depth 3
        
    - name: "Step 8: Alternative - check if WI is a different name"
      run: |
        echo ""
        echo "=================================================="
        echo "STEP 8: Listing all shared folders to find correct name"
        echo "=================================================="
        
        export RCLONE_CONFIG_MEGA_TYPE=mega
        export RCLONE_CONFIG_MEGA_USER="${MEGA_EMAIL}"
        export RCLONE_CONFIG_MEGA_PASS="${MEGA_PASSWORD}"
        
        echo "All shared folders:"
        rclone lsjson "mega:/Incoming shares" | python3 -c "
import sys, json
try:
    data = json.load(sys.stdin)
    for item in data:
        if item.get('IsDir'):
            print(f\"üìÅ {item['Name']}\")
            print(f\"   Path: mega:/Incoming shares/{item['Name']}\")
            print(f\"   Size: {item.get('Size', 0)}\")
            print(f\"   ModTime: {item.get('ModTime', 'unknown')}\")
            print()
except:
    pass
" || echo "Failed to parse JSON"

    - name: "Summary and Recommendations"
      if: always()
      run: |
        echo ""
        echo "=================================================="
        echo "DIAGNOSTIC SUMMARY"
        echo "=================================================="
        echo ""
        echo "Please check the output above to find:"
        echo "1. The exact path to your shared folder"
        echo "2. The correct case for folder names (PDF vs pdf)"
        echo "3. The actual structure inside WI folder"
        echo ""
        echo "Common issues:"
        echo "- Folder name case mismatch (PDF vs pdf vs Pdf)"
        echo "- Different folder structure than expected"
        echo "- Shared folder has different name than 'WI'"
        echo ""
        echo "Once you find the correct path, update your workflow with:"
        echo "  source_folder: '/Incoming shares/[CORRECT_PATH]'"
        echo "=================================================="
