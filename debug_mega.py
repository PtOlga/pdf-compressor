#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –ø–æ–∏—Å–∫–æ–º —Ñ–∞–π–ª–æ–≤ –≤ Mega
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent / 'src'))

from config import get_config
from mega_client import MegaClient
from utils import setup_logging, format_file_size

def debug_mega_files():
    """–û—Ç–ª–∞–¥–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ Mega"""
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    setup_logging(level="DEBUG")
    logger = __import__('logging').getLogger(__name__)
    
    try:
        logger.info("=" * 60)
        logger.info("üîç –û–¢–õ–ê–î–ö–ê MEGA –ö–õ–ò–ï–ù–¢–ê")
        logger.info("=" * 60)
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config = get_config()
        logger.info(f"\nüìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
        logger.info(f"   –í—Ö–æ–¥–Ω–∞—è –ø–∞–ø–∫–∞: {config.input_folder}")
        logger.info(f"   –í—ã—Ö–æ–¥–Ω–∞—è –ø–∞–ø–∫–∞: {config.output_folder}")
        logger.info(f"   –ú–∏–Ω. —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {config.min_file_size_kb} KB")
        logger.info(f"   –ú–∞–∫—Å. —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {config.max_file_size_mb} MB")
        logger.info(f"   –ü–∞—Ç—Ç–µ—Ä–Ω—ã –ø—Ä–æ–ø—É—Å–∫–∞: {config.skip_patterns}")
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Mega
        logger.info(f"\nüîê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Mega...")
        client = MegaClient()
        
        # –ü–æ–ª—É—á–∞–µ–º –í–°–ï —Ñ–∞–π–ª—ã –≤ –∞–∫–∫–∞—É–Ω—Ç–µ
        logger.info(f"\nüìÇ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑ Mega...")
        all_files = client.mega.get_files()
        
        logger.info(f"üìä –í—Å–µ–≥–æ –æ–±—ä–µ–∫—Ç–æ–≤ –≤ Mega: {len(all_files)}")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        logger.info(f"\nüìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫ –∏ —Ñ–∞–π–ª–æ–≤:")
        logger.info(f"{'ID':<20} {'–¢–∏–ø':<6} {'–ò–º—è':<40} {'–†–∞–∑–º–µ—Ä':<12} {'–ü—É—Ç—å'}")
        logger.info("-" * 120)
        
        for file_id, file_info in list(all_files.items())[:50]:  # –ü–µ—Ä–≤—ã–µ 50
            if not isinstance(file_info, dict):
                continue
            
            if 'a' not in file_info:
                continue
            
            name = file_info['a'].get('n', '?')
            file_type = file_info.get('t', '?')
            size = file_info.get('s', 0)
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø
            if file_type == 1:
                type_str = "–ü–ê–ü–ö–ê"
            elif file_type == 0:
                type_str = "–§–ê–ô–õ"
            else:
                type_str = f"–¢–ò–ü{file_type}"
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å
            file_path = client._get_file_path(file_id, all_files)
            
            size_str = format_file_size(size) if size > 0 else "-"
            
            logger.info(f"{file_id:<20} {type_str:<6} {name:<40} {size_str:<12} {file_path}")
        
        # –ò—â–µ–º PDF —Ñ–∞–π–ª—ã –≤ —Ü–µ–ª–µ–≤–æ–π –ø–∞–ø–∫–µ
        logger.info(f"\nüîé –ü–æ–∏—Å–∫ PDF —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ: {config.input_folder}")
        logger.info("-" * 120)
        
        pdf_count = 0
        for file_id, file_info in all_files.items():
            if not isinstance(file_info, dict) or 'a' not in file_info:
                continue
            
            name = file_info['a'].get('n', '')
            file_path = client._get_file_path(file_id, all_files)
            size = file_info.get('s', 0)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –ª–∏ PDF –≤ —Ü–µ–ª–µ–≤–æ–π –ø–∞–ø–∫–µ
            if file_path and file_path.startswith(config.input_folder.rstrip('/')):
                if name.lower().endswith(('.pdf', '.PDF')):
                    pdf_count += 1
                    logger.info(f"‚úÖ –ù–∞–π–¥–µ–Ω PDF: {name}")
                    logger.info(f"   –ü—É—Ç—å: {file_path}")
                    logger.info(f"   –†–∞–∑–º–µ—Ä: {format_file_size(size)}")
                    logger.info(f"   ID: {file_id}")
                    logger.info("")
        
        if pdf_count == 0:
            logger.warning(f"‚ö†Ô∏è PDF —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–∞–ø–∫–µ {config.input_folder}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–∞–º–∞ –ø–∞–ø–∫–∞
            logger.info(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–∞–ø–∫–∏...")
            folder_found = False
            for file_id, file_info in all_files.items():
                if not isinstance(file_info, dict) or 'a' not in file_info:
                    continue
                
                name = file_info['a'].get('n', '')
                file_path = client._get_file_path(file_id, all_files)
                file_type = file_info.get('t', 0)
                
                if file_path == config.input_folder and file_type == 1:
                    logger.info(f"‚úÖ –ü–∞–ø–∫–∞ –Ω–∞–π–¥–µ–Ω–∞: {file_path}")
                    folder_found = True
                    break
            
            if not folder_found:
                logger.error(f"‚ùå –ü–∞–ø–∫–∞ {config.input_folder} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ Mega!")
                logger.info(f"\nüí° –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞–ø–∫–∏:")
                for file_id, file_info in all_files.items():
                    if not isinstance(file_info, dict) or 'a' not in file_info:
                        continue
                    
                    file_type = file_info.get('t', 0)
                    if file_type == 1:  # –ü–∞–ø–∫–∞
                        name = file_info['a'].get('n', '')
                        file_path = client._get_file_path(file_id, all_files)
                        logger.info(f"   üìÅ {file_path}")
        else:
            logger.info(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ {pdf_count} PDF —Ñ–∞–π–ª–æ–≤")
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥
        logger.info(f"\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç list_pdf_files():")
        pdf_files = client.list_pdf_files(config.input_folder)
        logger.info(f"–ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(pdf_files)}")
        for f in pdf_files:
            logger.info(f"   - {f['name']} ({format_file_size(f['size'])})")
        
        logger.info("\n" + "=" * 60)
        logger.info("‚úÖ –û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        logger.info("=" * 60)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}", exc_info=True)
        return 1
    
    return 0

if __name__ == "__main__":
    sys.exit(debug_mega_files())

